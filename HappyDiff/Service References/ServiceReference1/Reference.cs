//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Runtime.Serialization;

namespace HappyDiff.Service_References.ServiceReference1 {
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TitleInfoServiceModel", Namespace="http://schemas.datacontract.org/2004/07/andreigecMVC.Services")]
    [Serializable()]
    public partial class TitleInfoServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string LatestTitleChangelogField;
        
        [OptionalField()]
        private string LatestTitleDownloadPathField;
        
        [OptionalField()]
        private double LatestTitleVersionField;
        
        [OptionalField()]
        private int TitleIDField;
        
        [OptionalField()]
        private string TitleNameField;
        
        [OptionalField()]
        private string keyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string LatestTitleChangelog {
            get {
                return this.LatestTitleChangelogField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestTitleChangelogField, value) != true)) {
                    this.LatestTitleChangelogField = value;
                    this.RaisePropertyChanged("LatestTitleChangelog");
                }
            }
        }
        
        [DataMember()]
        public string LatestTitleDownloadPath {
            get {
                return this.LatestTitleDownloadPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestTitleDownloadPathField, value) != true)) {
                    this.LatestTitleDownloadPathField = value;
                    this.RaisePropertyChanged("LatestTitleDownloadPath");
                }
            }
        }
        
        [DataMember()]
        public double LatestTitleVersion {
            get {
                return this.LatestTitleVersionField;
            }
            set {
                if ((this.LatestTitleVersionField.Equals(value) != true)) {
                    this.LatestTitleVersionField = value;
                    this.RaisePropertyChanged("LatestTitleVersion");
                }
            }
        }
        
        [DataMember()]
        public int TitleID {
            get {
                return this.TitleIDField;
            }
            set {
                if ((this.TitleIDField.Equals(value) != true)) {
                    this.TitleIDField = value;
                    this.RaisePropertyChanged("TitleID");
                }
            }
        }
        
        [DataMember()]
        public string TitleName {
            get {
                return this.TitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleNameField, value) != true)) {
                    this.TitleNameField = value;
                    this.RaisePropertyChanged("TitleName");
                }
            }
        }
        
        [DataMember()]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServices")]
    public interface IServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetTitleInfo", ReplyAction="http://tempuri.org/IServices/GetTitleInfoResponse")]
        TitleInfoServiceModel GetTitleInfo(string titleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetTitleInfo", ReplyAction="http://tempuri.org/IServices/GetTitleInfoResponse")]
        System.Threading.Tasks.Task<TitleInfoServiceModel> GetTitleInfoAsync(string titleName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicesChannel : IServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicesClient : System.ServiceModel.ClientBase<IServices>, IServices {
        
        public ServicesClient() {
        }
        
        public ServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TitleInfoServiceModel GetTitleInfo(string titleName) {
            return base.Channel.GetTitleInfo(titleName);
        }
        
        public System.Threading.Tasks.Task<TitleInfoServiceModel> GetTitleInfoAsync(string titleName) {
            return base.Channel.GetTitleInfoAsync(titleName);
        }
    }
}
